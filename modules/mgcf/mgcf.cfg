#
# $Id: mgcf.cfg 676 2009-06-17 06:07:04Z vingarzan $
#
# Interrogating - CSCF configuration script
#

# ----------- global configuration parameters ------------------------

debug=2
log_stderror=no
memlog=5
sip_warning=yes

fork=yes
children=4


listen=192.168.10.3
port=5060
alias="mgcf.ng-voice.com"
advertised_address="mgcf.ng-voice.com"
advertised_port=5060


check_via=no	# (cmd. line: -v)
dns=no			# (cmd. line: -r)
rev_dns=no		# (cmd. line: -R)

# ------------------ module loading ----------------------------------
mpath="/usr/lib/kamailio/modules:/usr/lib/kamailio/modules_s:/usr/lib/kamailio/modules_k"

loadmodule "tm.so"
modparam("tm", "fr_timer", 10000)

loadmodule "sl.so"
loadmodule "rr.so"
loadmodule "maxfwd.so"
loadmodule "textops.so"

loadmodule "dialog.so"

loadmodule "mgcf.so"
modparam("mgcf","name","mgcf.ng-voice.com")
modparam("mgcf","path","sip:term@mgcf.ng-voice.com")

modparam("mgcf","dialogs_hash_size",256)
modparam("mgcf","dialogs_expiration_time",3600)
modparam("mgcf","dialogs_enable_release",1)
modparam("mgcf","max_dialog_count",20000)
modparam("mgcf","min_se",90)

modparam("mgcf","icid_value_prefix","MGCFabcd")
modparam("mgcf","icid_gen_addr","109.239.50.66")
modparam("mgcf","orig_ioi","pstn.ng-voice.com")
modparam("mgcf","term_ioi","pstn.ng-voice.com")


loadmodule "enum.so"



# -- rr params --
# add value to ;lr param to make some broken UAs happy
modparam("rr", "enable_full_lr", 1)

# -------------------------  request routing logic -------------------

# main routing logic

route{

	route(Sanity_Checks);

	if (method=="INVITE"||method=="CANCEL"||method=="ACK"||method=="BYE"){
		if (M_PSTN_terminating()){
			route(PSTN_termination);
		}else{
			if (M_is_in_dialog("orig")){
				route("PSTN_origination_subsequent");
				break;
			}
			if (M_is_in_dialog("term")){
				route("PSTN_termination_subsequent");
				break;
			}
			
			route(PSTN_origination);
		}
		break;
	}else{
		log(1,">>       Method not acceptable at MGCF\n");
		append_to_reply("Allow: INVITE,CANCEL,ACK,BYE\r\n");
		t_reply("406","Initial Request Method not allowed at the MGCF");
		break;
	}
}


route[Sanity_Checks]
{
	# initial sanity checks -- messages with
	# max_forwards==0, or excessively long requests
	if (!mf_process_maxfwd_header("10")) {
		sl_send_reply("483","Too Many Hops");
		exit;
	};
}


route[Check_Session_Expires]
{
	if (!M_check_session_expires())	{
		M_422_session_expires();
		exit;
	};		
}	



route[Fix_Request_URI_to_Gw]
{
	# Some gateways do not accept the typical tel:.*/sip.*;user=phone URIs and need to be changed here 
	rewritehostport("109.239.50.66:9060");
}

route[Fix_Request_URI_to_IMS]
{
	# Some gateways do not send the typical tel:.*/sip.*;user=phone URIs and need to be changed here 
	rewritehostport("ng-voice.com");
}

#
#		Termination 				IMS -> MGCF -> PSTN
#


route[PSTN_termination]
{
	log(1,">>       PSTN_termination\n");
	
	route(Check_Session_Expires);
	
	if (!M_save_dialog("term")){
		sl_send_reply("514","Terminating dialog save failure - MGCF maximum dialog count reached!");
		exit;
	}
	
	loose_route();
	
	route(Fix_Request_URI_to_Gw);
	
	if (method=="ACK"){
		t_relay();
		exit;
	}
	
	t_on_reply("PSTN_termination_Reply");
	t_on_failure("PSTN_termination_Failure");
		
	if (!t_relay()) {
		sl_send_reply("500","Error forwarding towards PSTN Domain");
		M_drop_dialog("term");
		break;
	};
	
	exit;

}

route[Filter_Out_ISUP]
{
	# Some gateways add the ISUP bodies, yet many IMS clients do not understand it or can't decode multiparts (sdp and isup)
	if (!M_filter_content_type("application/sdp")){
		M_drop_body();
	}
}

onreply_route[PSTN_termination_Reply]
{
	log(1,">>      PSTN_termination_Reply\n");
	
	
	if (t_check_status("(1[1-9].)|(1.[1-9])|(2..)")){
		M_enforce_record_routes();
		# Some gateways add the ISUP bodies, yet many IMS clients do not understand it or can't decode multiparts (sdp and isup)
		if (!M_filter_content_type("application/sdp")){
			M_drop_body();
		}
	}
	
	if (!t_check_status("(408)|(480)")){
		M_assert_called_identity();
		M_update_dialog("term");
		break;
	}else{
		M_drop_dialog("term");
		break;
	}
	
}

failure_route[PSTN_termination_Failure]
{
	log(1,">>       PSTN_termination_Failure\n");
	if (t_check_status("(408)|(480)")){
		M_drop_dialog("term");
		break;
	}
	break;
}


route[PSTN_termination_subsequent]
{
	log(1,">>       PSTN_termination_subsequent\n");
	
	route(Check_Session_Expires);
	
	M_update_dialog("term");
	
	loose_route();
	
	
	route(Fix_Request_URI_to_Gw);
	
	
	if (method=="INVITE"||method=="ACK")
	{
		route(Filter_Out_ISUP);
	}
	
	t_on_reply("PSTN_termination_subseq_Reply");
	
	if (!t_relay()) {
		sl_send_reply("500","Error forwarding towards PSTN Domain");
		break;
	};
	
	exit;
}

onreply_route[PSTN_termination_subseq_Reply]
{
	log(1,">>       PSTN_termination_subseq_Reply\n");	
	if (t_check_status("[1-2]..")){
		M_update_dialog("term");
		# Some gateways add the ISUP bodies, yet many IMS clients do not understand it or can't decode multiparts (sdp and isup)
		if (!M_filter_content_type("application/sdp")){
			M_drop_body();
		}
	}
	break;
}




#
#		Origination 				PSTN -> MGCF -> IMS
#

route[TRCF]
{
	if (!t_relay_to_udp("109.239.50.66","3060")) {
		sl_send_reply("500","Error forwarding towards TRCF");
		M_drop_dialog("orig");		
		break;
	};
}


route[PSTN_origination]
{
	log(1,">>       PSTN_origination\n");
	
	if (method=="INVITE"||method=="ACK"){
		route(Filter_Out_ISUP);
	}
	
	if (method=="ACK"){
		log(1,">> Received an ACK... ignoring (the ones to fwd should land in subsequent)\n");
		break;
	}
	
	M_add_p_charging_vector();
	M_assert_identity();
	
	M_record_route("orig");
	
	route(Fix_Request_URI_to_IMS);
	
	loose_route();
	
	route(Check_Session_Expires);
	
	if (!M_save_dialog("orig")){
		sl_send_reply("514","Originating dialog save failure - MGCF maximum dialog count reached!");
		exit;
	}
	
	
	t_on_reply("PSTN_origination_Reply");
	t_on_failure("PSTN_origination_Failure");
	
	route(TRCF);
	
	exit;
}


onreply_route[PSTN_origination_Reply]
{
	log(1,">>      PSTN_origination_Reply\n");

	if (t_check_status("(1..)|(2..)")){
		M_update_dialog("orig");
		break;
	}else{
		M_drop_dialog("orig");
		break;
	}	
}

failure_route[PSTN_origination_Failure]
{
	log(1,">>       PSTN_origination_Failure\n");
	if (t_check_status("(408)|(480)")){
		M_drop_dialog("orig");
		break;
	}
	break;
}

route[PSTN_origination_subsequent]
{
	log(1,">>       PSTN_origination_subsequent\n");
	
	route(Check_Session_Expires);	
	
	loose_route();
	
	if (!M_is_in_dialog_simple("orig")){
		# only for request from MGCF - without Route	
		M_enforce_dialog_requri("orig");
		if (method!="CANCEL"){
			M_enforce_dialog_routes("orig");
		}
	}
	
	route(Check_Session_Expires);
	
	M_update_dialog("orig");
	
	if (method=="INVITE"||method=="ACK")
	{
		route(Filter_Out_ISUP);
	}
	
	t_on_reply("PSTN_origination_subseq_Reply");
	
	if (!t_relay()) {
		sl_send_reply("500","Error forwarding towards IMS Domain");
		break;
	};
	
	exit;
}

onreply_route[PSTN_origination_subseq_Reply]
{
	log(1,">>       PSTN_origination_subseq_Reply\n");	
	if (t_check_status("[1-2]..")){
		M_update_dialog("orig");		
		# Some gateways add the ISUP bodies, yet many IMS clients do not understand it or can't decode multiparts (sdp and isup)
		if (!M_filter_content_type("application/sdp")){
			M_drop_body();
		}
	}	
	break;
}
